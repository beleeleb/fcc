{"version":3,"sources":["components/quote.js","App.js","index.js"],"names":["Tabs","styled","ul","Tab","li","Span","span","Container","div","props","bgColor","QuoteText","QuoteAuthor","BtnsContainer","Link","a","Btn","button","Quote","setBgColor","useState","text","author","quote","setQuote","useEffect","num","Math","random","console","log","floor","toString","padEnd","axios","get","then","response","quoteRes","data","length","id","onClick","window","location","reload","App","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAqDA,I,EAAMA,EAAOC,IAAOC,GAAV,8FAOJC,EAAMF,IAAOG,GAAV,2YAYHC,EAAOJ,IAAOK,KAAV,oSAUJC,EAAYN,IAAOO,IAAV,kOAIJ,SAAAC,GAAK,OAAIA,EAAMC,WAQpBC,EAAYV,IAAOO,IAAV,mEAKTI,EAAcX,IAAOO,IAAV,uFAMXK,EAAgBZ,IAAOO,IAAV,+GAMbM,EAAOb,IAAOc,EAAV,8KAGY,SAAAN,GAAK,OAAIA,EAAMC,WAQ/BM,EAAMf,IAAOgB,OAAV,qMAGa,SAAAR,GAAK,OAAIA,EAAMC,WAQtBQ,EAjIf,YAAyC,IAAxBC,EAAuB,EAAvBA,WAAYT,EAAW,EAAXA,QAC3B,EAA0BU,mBAAS,IAAnC,mBACA,GADA,UAC0BA,mBAAS,CAAEC,KAAM,GAAIC,OAAQ,MAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OArBAC,qBAAU,WACR,IAAMC,EAAsB,IAAhBC,KAAKC,SACjBC,QAAQC,IAAI,eAAiBJ,GAC7BG,QAAQC,IAAI,cAAgBH,KAAKI,MAAML,IACvCG,QAAQC,IAAI,iBAAmBH,KAAKI,MAAML,GAAKM,SAAS,KACxDH,QAAQC,IAAI,gBAAkBH,KAAKI,MAAML,GAAKM,SAAS,IAAIC,OAAO,EAAE,MAEpEd,EAAW,IAAMQ,KAAKI,MAAML,GAAKM,SAAS,IAAIC,OAAO,EAAE,MAEtCC,IACdC,IAAI,+BACJC,MAAK,SAASC,GAEbR,QAAQC,IAAIO,GAEZ,IAAMC,EACJD,EAASE,KAAKZ,KAAKI,MAAMJ,KAAKC,SAAWS,EAASE,KAAKC,SACzDhB,EAAS,CAAEH,KAAMiB,EAASjB,KAAMC,OAAQgB,EAAShB,cAEpD,IAGD,eAACf,EAAD,CAAWG,QAASA,EAAS+B,GAAG,YAAhC,UACE,cAAC9B,EAAD,UAAYY,EAAMF,OAClB,eAACT,EAAD,gBAAgBW,EAAMD,UACtB,eAACT,EAAD,WACE,cAACC,EAAD,CAAMJ,QAASA,EAAS+B,GAAG,gBAC3B,cAAC3B,EAAD,CAAMJ,QAASA,IACf,cAACM,EAAD,CACEN,QAASA,EACTgC,QAAS,kBAAMC,OAAOC,SAASC,UAC/BJ,GAAG,YAHL,0BAUF,cAACzC,EAAD,UACJ,cAACG,EAAD,UAAK,cAACE,EAAD,2BC7BP,IAAME,EAAYN,IAAOO,IAAV,kLACO,SAAAC,GAAK,OAAIA,EAAMC,WAOtBoC,EArBf,WACE,MAA8B1B,mBAAS,WAAvC,mBAAOV,EAAP,KAAgBS,EAAhB,KACA,OACE,cAAC,EAAD,CAAWT,QAASA,EAApB,SACE,cAAC,EAAD,CAAOS,WAAYA,EAAYT,QAASA,OCH9CqC,EAAQ,IAAUC,SAClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e7c14e6.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport styled from \"styled-components\";\nfunction Quote({ setBgColor, bgColor }) {\n  const [token, setToken] = useState(\"\");\n  const [quote, setQuote] = useState({ text: \"\", author: \"\" });\n  useEffect(() => {\n    const num = Math.random() * 200;\n    console.log(\"before floor\" + num);\n    console.log(\"after floor\" + Math.floor(num));\n    console.log(\"after tostring\" + Math.floor(num).toString(16));\n    console.log(\"after padding\" + Math.floor(num).toString(16).padEnd(6,\"0\"));\n//TODO: make decimal to rgb \n    setBgColor(\"#\" + Math.floor(num).toString(16).padEnd(6,\"0\"));\n\n    const response = axios\n      .get(\"https://type.fit/api/quotes\")\n      .then(function(response) {\n        // handle success\n        console.log(response);\n\n        const quoteRes =\n          response.data[Math.floor(Math.random() * response.data.length)];\n        setQuote({ text: quoteRes.text, author: quoteRes.author });\n      });\n  }, []);\n\n  return (\n    <Container bgColor={bgColor} id=\"quote-box\">\n      <QuoteText>{quote.text}</QuoteText>\n      <QuoteAuthor>- {quote.author}</QuoteAuthor>\n      <BtnsContainer>\n        <Link bgColor={bgColor} id=\"tweet-quote\" />\n        <Link bgColor={bgColor} />\n        <Btn\n          bgColor={bgColor}\n          onClick={() => window.location.reload()}\n          id=\"new-quote\"\n        >\n          New Quote\n        </Btn>\n\n\n      </BtnsContainer>\n      <Tabs>\n  <Tab><Span>rrrr</Span></Tab>\n</Tabs>\n    </Container>\n    \n  );\n}\n\nconst Tabs = styled.ul`\n    display: flex;\n    width: 100%;\n    margin-top: 2em;\n    \n`;\n\nconst Tab = styled.li`\n    display: flex;\n    font-family: \"Raleway\";\n    font-size: 25px;\n    border-bottom: 3px solid transparent;\n    background-image: linear-gradient(rgba(0, 145, 148, 1), rgba(72, 71, 112, 1)), rgba(0,255,0,1))\n    background-clip: content-box, border-box;\n    box-shadow: 2px 1000px 1px \trgba(248, 248, 255,1) inset;\n    cursor: pointer;\n    outline: none;\n`;\n\nconst Span = styled.span`\n    font-weight: 800;\n    text-fill-color: transparent;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    border-image-source: repeating-linear-gradient(45deg, transparent, #4d9f0c 20px);\n    background-image: rgba(0,255,0,1);\n`;\n\n\nconst Container = styled.div`\n  background-color: white;\n  width: 500px;\n  font-family: \"Raleway\";\n  color: ${props => props.bgColor};\n  transition: color 2s;\n\n  padding: 20px 20px 20px 20px;\n  display: grid;\n  grid-template-rows: 1fr 50px;\n`;\n\nconst QuoteText = styled.div`\nfont-size: 32px;\ntext-align: center;\n`\n\nconst QuoteAuthor = styled.div`\nfont-size: 20px;\njustify-self: end;\nalign-self: center;\n`\n\nconst BtnsContainer = styled.div`\n  padding-top: 10px;\n  display: grid;\n  grid-template-columns: 45px 45px 1fr;\n  `;\n\nconst Link = styled.a`\n  width: 40px;\n  height: 40px;\n  background-color: ${props => props.bgColor};\n  transition: background-color 2s;\n\n  border: 0;\n  outline: none;\n  color: white;\n`;\n\nconst Btn = styled.button`\n  width: 100px;\n  height: 40px;\n  background-color: ${props => props.bgColor};\n  transition: background-color 2s;\n\n  border: 0;\n  outline: none;\n  color: white;\n  justify-self: end;\n`;\nexport default Quote;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Quote from \"./components/quote\";\nimport styled from \"styled-components\";\nfunction App() {\n  const [bgColor, setBgColor] = useState(\"#55f5f1\");\n  return (\n    <Container bgColor={bgColor}>\n      <Quote setBgColor={setBgColor} bgColor={bgColor} />\n\n\n    </Container>\n  );\n}\n\n\n\nconst Container = styled.div`\n  background-color: ${props => props.bgColor};\n  transition: background-color 2s;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\nrequire(\"dotenv\").config();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}